// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.9.2
// source: archcopy.proto

package archcopyRPC

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectInquire struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID          []byte `protobuf:"bytes,1,opt,name=ClientID,proto3" json:"ClientID,omitempty"`
	Phase             int32  `protobuf:"varint,2,opt,name=Phase,proto3" json:"Phase,omitempty"`
	OfferNonce        []byte `protobuf:"bytes,3,opt,name=OfferNonce,proto3" json:"OfferNonce,omitempty"`
	OfferSignature    []byte `protobuf:"bytes,4,opt,name=OfferSignature,proto3" json:"OfferSignature,omitempty"`
	ChallengeResponse []byte `protobuf:"bytes,5,opt,name=ChallengeResponse,proto3" json:"ChallengeResponse,omitempty"`
}

func (x *ConnectInquire) Reset() {
	*x = ConnectInquire{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectInquire) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectInquire) ProtoMessage() {}

func (x *ConnectInquire) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectInquire.ProtoReflect.Descriptor instead.
func (*ConnectInquire) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectInquire) GetClientID() []byte {
	if x != nil {
		return x.ClientID
	}
	return nil
}

func (x *ConnectInquire) GetPhase() int32 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *ConnectInquire) GetOfferNonce() []byte {
	if x != nil {
		return x.OfferNonce
	}
	return nil
}

func (x *ConnectInquire) GetOfferSignature() []byte {
	if x != nil {
		return x.OfferSignature
	}
	return nil
}

func (x *ConnectInquire) GetChallengeResponse() []byte {
	if x != nil {
		return x.ChallengeResponse
	}
	return nil
}

type ConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase              int32  `protobuf:"varint,1,opt,name=Phase,proto3" json:"Phase,omitempty"`
	NonceSignature     []byte `protobuf:"bytes,2,opt,name=NonceSignature,proto3" json:"NonceSignature,omitempty"`
	Challenge          []byte `protobuf:"bytes,3,opt,name=Challenge,proto3" json:"Challenge,omitempty"`
	ChallengeSignature []byte `protobuf:"bytes,4,opt,name=ChallengeSignature,proto3" json:"ChallengeSignature,omitempty"`
	Key                []byte `protobuf:"bytes,5,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectResponse) GetPhase() int32 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *ConnectResponse) GetNonceSignature() []byte {
	if x != nil {
		return x.NonceSignature
	}
	return nil
}

func (x *ConnectResponse) GetChallenge() []byte {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *ConnectResponse) GetChallengeSignature() []byte {
	if x != nil {
		return x.ChallengeSignature
	}
	return nil
}

func (x *ConnectResponse) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type SessionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       []byte `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *SessionKey) Reset() {
	*x = SessionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionKey) ProtoMessage() {}

func (x *SessionKey) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionKey.ProtoReflect.Descriptor instead.
func (*SessionKey) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{2}
}

func (x *SessionKey) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SessionKey) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SweepPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey     []byte `protobuf:"bytes,1,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	Signature      []byte `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	StartDirectory []byte `protobuf:"bytes,3,opt,name=StartDirectory,proto3" json:"StartDirectory,omitempty"`
	FollowSymlinks bool   `protobuf:"varint,4,opt,name=FollowSymlinks,proto3" json:"FollowSymlinks,omitempty"`
	GenerateHashes bool   `protobuf:"varint,5,opt,name=GenerateHashes,proto3" json:"GenerateHashes,omitempty"`
}

func (x *SweepPackage) Reset() {
	*x = SweepPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SweepPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepPackage) ProtoMessage() {}

func (x *SweepPackage) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepPackage.ProtoReflect.Descriptor instead.
func (*SweepPackage) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{3}
}

func (x *SweepPackage) GetSessionKey() []byte {
	if x != nil {
		return x.SessionKey
	}
	return nil
}

func (x *SweepPackage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *SweepPackage) GetStartDirectory() []byte {
	if x != nil {
		return x.StartDirectory
	}
	return nil
}

func (x *SweepPackage) GetFollowSymlinks() bool {
	if x != nil {
		return x.FollowSymlinks
	}
	return false
}

func (x *SweepPackage) GetGenerateHashes() bool {
	if x != nil {
		return x.GenerateHashes
	}
	return false
}

type SweepPackageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Directory []byte              `protobuf:"bytes,1,opt,name=Directory,proto3" json:"Directory,omitempty"`
	Files     []*SweepPackageFile `protobuf:"bytes,2,rep,name=Files,proto3" json:"Files,omitempty"`
	Signature []byte              `protobuf:"bytes,3,opt,name=Signature,proto3" json:"Signature,omitempty"`
}

func (x *SweepPackageReply) Reset() {
	*x = SweepPackageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SweepPackageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepPackageReply) ProtoMessage() {}

func (x *SweepPackageReply) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepPackageReply.ProtoReflect.Descriptor instead.
func (*SweepPackageReply) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{4}
}

func (x *SweepPackageReply) GetDirectory() []byte {
	if x != nil {
		return x.Directory
	}
	return nil
}

func (x *SweepPackageReply) GetFiles() []*SweepPackageFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *SweepPackageReply) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SweepPackageFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename []byte `protobuf:"bytes,1,opt,name=Filename,proto3" json:"Filename,omitempty"`
	Size     int64  `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	Hash     []byte `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *SweepPackageFile) Reset() {
	*x = SweepPackageFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SweepPackageFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepPackageFile) ProtoMessage() {}

func (x *SweepPackageFile) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepPackageFile.ProtoReflect.Descriptor instead.
func (*SweepPackageFile) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{5}
}

func (x *SweepPackageFile) GetFilename() []byte {
	if x != nil {
		return x.Filename
	}
	return nil
}

func (x *SweepPackageFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SweepPackageFile) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type FilePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey *SessionKey `protobuf:"bytes,1,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	Signature  []byte      `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Filenames  [][]byte    `protobuf:"bytes,3,rep,name=Filenames,proto3" json:"Filenames,omitempty"`
}

func (x *FilePackage) Reset() {
	*x = FilePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePackage) ProtoMessage() {}

func (x *FilePackage) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePackage.ProtoReflect.Descriptor instead.
func (*FilePackage) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{6}
}

func (x *FilePackage) GetSessionKey() *SessionKey {
	if x != nil {
		return x.SessionKey
	}
	return nil
}

func (x *FilePackage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *FilePackage) GetFilenames() [][]byte {
	if x != nil {
		return x.Filenames
	}
	return nil
}

type FilePackageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte            `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Existing  map[uint32]uint64 `protobuf:"bytes,2,rep,name=Existing,proto3" json:"Existing,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *FilePackageReply) Reset() {
	*x = FilePackageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilePackageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilePackageReply) ProtoMessage() {}

func (x *FilePackageReply) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilePackageReply.ProtoReflect.Descriptor instead.
func (*FilePackageReply) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{7}
}

func (x *FilePackageReply) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *FilePackageReply) GetExisting() map[uint32]uint64 {
	if x != nil {
		return x.Existing
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []byte `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	Compressed bool   `protobuf:"varint,2,opt,name=Compressed,proto3" json:"Compressed,omitempty"`
	Zero       int64  `protobuf:"varint,3,opt,name=Zero,proto3" json:"Zero,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{8}
}

func (x *File) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *File) GetCompressed() bool {
	if x != nil {
		return x.Compressed
	}
	return false
}

func (x *File) GetZero() int64 {
	if x != nil {
		return x.Zero
	}
	return 0
}

type WriteFileStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature    []byte `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Status       int32  `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	ReceivedHash []byte `protobuf:"bytes,3,opt,name=ReceivedHash,proto3" json:"ReceivedHash,omitempty"`
	ReadbackHash []byte `protobuf:"bytes,4,opt,name=ReadbackHash,proto3" json:"ReadbackHash,omitempty"`
	Error        []byte `protobuf:"bytes,5,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *WriteFileStatus) Reset() {
	*x = WriteFileStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteFileStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileStatus) ProtoMessage() {}

func (x *WriteFileStatus) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileStatus.ProtoReflect.Descriptor instead.
func (*WriteFileStatus) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{9}
}

func (x *WriteFileStatus) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *WriteFileStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WriteFileStatus) GetReceivedHash() []byte {
	if x != nil {
		return x.ReceivedHash
	}
	return nil
}

func (x *WriteFileStatus) GetReadbackHash() []byte {
	if x != nil {
		return x.ReadbackHash
	}
	return nil
}

func (x *WriteFileStatus) GetError() []byte {
	if x != nil {
		return x.Error
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Status    int32  `protobuf:"varint,2,opt,name=Status,proto3" json:"Status,omitempty"`
	Variant   []byte `protobuf:"bytes,3,opt,name=Variant,proto3" json:"Variant,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{10}
}

func (x *Status) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Status) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Status) GetVariant() []byte {
	if x != nil {
		return x.Variant
	}
	return nil
}

type Filename struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey []byte `protobuf:"bytes,1,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	Signature  []byte `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Filename   []byte `protobuf:"bytes,3,opt,name=Filename,proto3" json:"Filename,omitempty"`
	Offset     int64  `protobuf:"varint,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *Filename) Reset() {
	*x = Filename{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filename) ProtoMessage() {}

func (x *Filename) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filename.ProtoReflect.Descriptor instead.
func (*Filename) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{11}
}

func (x *Filename) GetSessionKey() []byte {
	if x != nil {
		return x.SessionKey
	}
	return nil
}

func (x *Filename) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Filename) GetFilename() []byte {
	if x != nil {
		return x.Filename
	}
	return nil
}

func (x *Filename) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature []byte `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Hash      []byte `protobuf:"bytes,2,opt,name=Hash,proto3" json:"Hash,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{12}
}

func (x *Hash) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Hash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type RenamePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionKey  []byte `protobuf:"bytes,1,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	Signature   []byte `protobuf:"bytes,2,opt,name=Signature,proto3" json:"Signature,omitempty"`
	Source      []byte `protobuf:"bytes,3,opt,name=Source,proto3" json:"Source,omitempty"`
	Destination []byte `protobuf:"bytes,4,opt,name=Destination,proto3" json:"Destination,omitempty"`
}

func (x *RenamePackage) Reset() {
	*x = RenamePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_archcopy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenamePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenamePackage) ProtoMessage() {}

func (x *RenamePackage) ProtoReflect() protoreflect.Message {
	mi := &file_archcopy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenamePackage.ProtoReflect.Descriptor instead.
func (*RenamePackage) Descriptor() ([]byte, []int) {
	return file_archcopy_proto_rawDescGZIP(), []int{13}
}

func (x *RenamePackage) GetSessionKey() []byte {
	if x != nil {
		return x.SessionKey
	}
	return nil
}

func (x *RenamePackage) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *RenamePackage) GetSource() []byte {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *RenamePackage) GetDestination() []byte {
	if x != nil {
		return x.Destination
	}
	return nil
}

var File_archcopy_proto protoreflect.FileDescriptor

var file_archcopy_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x22, 0xb8, 0x01,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x4e, 0x6f, 0x6e, 0x63,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x3c, 0x0a, 0x0a, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x0c, 0x53, 0x77, 0x65,
	0x65, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x53,
	0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22,
	0x84, 0x01, 0x0a, 0x11, 0x53, 0x77, 0x65, 0x65, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43,
	0x2e, 0x53, 0x77, 0x65, 0x65, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x56, 0x0a, 0x10, 0x53, 0x77, 0x65, 0x65, 0x70, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x82,
	0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x37,
	0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63,
	0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x1a,
	0x3b, 0x0a, 0x0d, 0x45, 0x78, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x04,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x5a, 0x65, 0x72, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x5a, 0x65, 0x72, 0x6f, 0x22, 0xa5, 0x01, 0x0a,
	0x0f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65,
	0x61, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x58, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x22, 0x7c,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x38, 0x0a, 0x04,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x32, 0x97, 0x04, 0x0a, 0x05, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79,
	0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x1a, 0x1c, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x09, 0x53, 0x77, 0x65, 0x65, 0x70, 0x54, 0x72, 0x65, 0x65, 0x12,
	0x19, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x77,
	0x65, 0x65, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x1a, 0x1e, 0x2e, 0x61, 0x72, 0x63,
	0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x77, 0x65, 0x65, 0x70, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x30, 0x01, 0x12, 0x47,
	0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x1a, 0x1d, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70,
	0x79, 0x52, 0x50, 0x43, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52,
	0x50, 0x43, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x1c, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f,
	0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x28, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x52, 0x65, 0x61,
	0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x15, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79,
	0x52, 0x50, 0x43, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x11, 0x2e, 0x61,
	0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x15, 0x2e,
	0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x11, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52,
	0x50, 0x43, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x0a, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x61, 0x72, 0x63, 0x68,
	0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79,
	0x52, 0x50, 0x43, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0a,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x61, 0x72, 0x63,
	0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f, 0x70, 0x79, 0x52, 0x50,
	0x43, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2f, 0x61, 0x72, 0x63, 0x68, 0x63, 0x6f,
	0x70, 0x79, 0x52, 0x50, 0x43, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_archcopy_proto_rawDescOnce sync.Once
	file_archcopy_proto_rawDescData = file_archcopy_proto_rawDesc
)

func file_archcopy_proto_rawDescGZIP() []byte {
	file_archcopy_proto_rawDescOnce.Do(func() {
		file_archcopy_proto_rawDescData = protoimpl.X.CompressGZIP(file_archcopy_proto_rawDescData)
	})
	return file_archcopy_proto_rawDescData
}

var file_archcopy_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_archcopy_proto_goTypes = []interface{}{
	(*ConnectInquire)(nil),    // 0: archcopyRPC.ConnectInquire
	(*ConnectResponse)(nil),   // 1: archcopyRPC.ConnectResponse
	(*SessionKey)(nil),        // 2: archcopyRPC.SessionKey
	(*SweepPackage)(nil),      // 3: archcopyRPC.SweepPackage
	(*SweepPackageReply)(nil), // 4: archcopyRPC.SweepPackageReply
	(*SweepPackageFile)(nil),  // 5: archcopyRPC.SweepPackageFile
	(*FilePackage)(nil),       // 6: archcopyRPC.FilePackage
	(*FilePackageReply)(nil),  // 7: archcopyRPC.FilePackageReply
	(*File)(nil),              // 8: archcopyRPC.File
	(*WriteFileStatus)(nil),   // 9: archcopyRPC.WriteFileStatus
	(*Status)(nil),            // 10: archcopyRPC.Status
	(*Filename)(nil),          // 11: archcopyRPC.Filename
	(*Hash)(nil),              // 12: archcopyRPC.Hash
	(*RenamePackage)(nil),     // 13: archcopyRPC.RenamePackage
	nil,                       // 14: archcopyRPC.FilePackageReply.ExistingEntry
}
var file_archcopy_proto_depIdxs = []int32{
	5,  // 0: archcopyRPC.SweepPackageReply.Files:type_name -> archcopyRPC.SweepPackageFile
	2,  // 1: archcopyRPC.FilePackage.SessionKey:type_name -> archcopyRPC.SessionKey
	14, // 2: archcopyRPC.FilePackageReply.Existing:type_name -> archcopyRPC.FilePackageReply.ExistingEntry
	0,  // 3: archcopyRPC.Slave.Connect:input_type -> archcopyRPC.ConnectInquire
	3,  // 4: archcopyRPC.Slave.SweepTree:input_type -> archcopyRPC.SweepPackage
	6,  // 5: archcopyRPC.Slave.CheckFiles:input_type -> archcopyRPC.FilePackage
	8,  // 6: archcopyRPC.Slave.WriteFile:input_type -> archcopyRPC.File
	11, // 7: archcopyRPC.Slave.ReadHash:input_type -> archcopyRPC.Filename
	11, // 8: archcopyRPC.Slave.ReadFile:input_type -> archcopyRPC.Filename
	13, // 9: archcopyRPC.Slave.RenameFile:input_type -> archcopyRPC.RenamePackage
	2,  // 10: archcopyRPC.Slave.Disconnect:input_type -> archcopyRPC.SessionKey
	1,  // 11: archcopyRPC.Slave.Connect:output_type -> archcopyRPC.ConnectResponse
	4,  // 12: archcopyRPC.Slave.SweepTree:output_type -> archcopyRPC.SweepPackageReply
	7,  // 13: archcopyRPC.Slave.CheckFiles:output_type -> archcopyRPC.FilePackageReply
	9,  // 14: archcopyRPC.Slave.WriteFile:output_type -> archcopyRPC.WriteFileStatus
	12, // 15: archcopyRPC.Slave.ReadHash:output_type -> archcopyRPC.Hash
	8,  // 16: archcopyRPC.Slave.ReadFile:output_type -> archcopyRPC.File
	10, // 17: archcopyRPC.Slave.RenameFile:output_type -> archcopyRPC.Status
	10, // 18: archcopyRPC.Slave.Disconnect:output_type -> archcopyRPC.Status
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_archcopy_proto_init() }
func file_archcopy_proto_init() {
	if File_archcopy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_archcopy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectInquire); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SweepPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SweepPackageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SweepPackageFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilePackageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteFileStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filename); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_archcopy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenamePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_archcopy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_archcopy_proto_goTypes,
		DependencyIndexes: file_archcopy_proto_depIdxs,
		MessageInfos:      file_archcopy_proto_msgTypes,
	}.Build()
	File_archcopy_proto = out.File
	file_archcopy_proto_rawDesc = nil
	file_archcopy_proto_goTypes = nil
	file_archcopy_proto_depIdxs = nil
}
